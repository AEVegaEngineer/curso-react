{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","store/store.js","helpers/fetch.js","helpers/convertDateStrToDateObj.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/AuthScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","convertDateStrToDateObj","event","end","moment","toDate","start","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","AuthScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","undefined","msg","errors","title","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","isModalOpen","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","noValidate","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1406569.chunk.js","sourcesContent":["export const types = {\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventStartAddNew: '[event] Start add new event',\r\n  eventAddNew: '[event] Add new event',\r\n  eventSetActive: '[event] Set active event',\r\n  eventClearActive: '[event] Clear active event',\r\n  eventUpdated: '[event] Updated event',\r\n  eventDeleted: '[event] Deleted event',\r\n  eventLoaded: '[event] Load events',\r\n  eventUnloaded: '[event] Unload events',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return{\r\n        ...state,\r\n        modalOpen: true\r\n      }\r\n    case types.uiCloseModal:\r\n      return{\r\n        ...state,\r\n        modalOpen: false\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//   id: new Date().getTime(),\r\n//   title: 'Cumple del jefe',\r\n//   start: moment().toDate(),// new Date()\r\n//   end: moment().add(2, 'hours').toDate(),\r\n//   bgcolor: '#fafafa',\r\n//   notes: 'comprar el pastel',\r\n//   user: {\r\n//     _id: '123',\r\n//     name: 'Fernando',\r\n//   }\r\n// }\r\n\r\nconst initialState = { \r\n  events: [ ],\r\n  activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return{\r\n        ...state,\r\n        activeEvent: action.payload\r\n      }\r\n    case types.eventAddNew:\r\n      return{\r\n        ...state,\r\n        events: [\r\n          ...state.events, action.payload\r\n        ]\r\n      }\r\n    case types.eventClearActive:\r\n      return{\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n    case types.eventUnloaded:\r\n      return{\r\n        ...state,\r\n        events: [],\r\n        activeEvent: null\r\n      }\r\n    case types.eventUpdated:\r\n      return{\r\n        ...state,\r\n        events: state.events.map(\r\n          e => (e.id === action.payload.id) ? action.payload : e\r\n        )\r\n      }\r\n    case types.eventDeleted:\r\n      // regresa todos los eventos excepto el seleccionado\r\n      return{\r\n        ...state,\r\n        events: state.events.filter(\r\n          e => (e.id !== state.activeEvent.id)\r\n        ),\r\n        // restablece el activeEvent luego de eliminar ese evento\r\n        activeEvent:null\r\n      }\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  // email: null,\r\n  // password: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n        ...action.payload\r\n      }    \r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        // no se toma el resto del estado porque se supone que en el action se borro el estado del localstorage\r\n        \r\n        checking: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { calendarReducer } from \"../reducers/calendarReducer\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n  const url = `${ baseUrl }/${endpoint}`;\r\n  if ( method === 'GET' ) {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n  const url = `${ baseUrl }/${endpoint}`;\r\n  const token = localStorage.getItem('token') || '';\r\n  if ( method === 'GET' ) {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'X-Authorization': token\r\n      }\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'X-Authorization': token\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n}\r\n\r\nexport { fetchSinToken, fetchConToken }","import moment from 'moment';\r\nexport const convertDateStrToDateObj = (events = []) => {\r\n  return events.map(\r\n    event => ({\r\n      ...event,\r\n      end: moment(event.end).toDate(),\r\n      start: moment(event.start).toDate(),\r\n    })\r\n  );\r\n}\r\n","import { fetchConToken } from \"../helpers/fetch\";\r\nimport { convertDateStrToDateObj } from \"../helpers/convertDateStrToDateObj\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  // El id y nombre del usuario se toman desde el state\r\n  // ya que no vienen directamente en la respuesta del backend\r\n  // se podrian agregar en la respuesta del backend, pero este no es el caso\r\n  return async( dispatch, getState )=> {  \r\n    const { uid, name }   = getState().auth;\r\n    try {\r\n      //console.log(event)\r\n      const resp = await fetchConToken('events/add', event, 'POST');\r\n      const body = await resp.json();\r\n\r\n      //console.log(body)\r\n      if(body.ok) {\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name\r\n        }\r\n        //console.log(event)\r\n        dispatch(eventAddNew(event))\r\n      } else {        \r\n        Swal.fire('Error', (body.msg !== undefined) ? body.msg : body.errors.title.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearLogout = () => ({\r\n  type: types.eventUnloaded,\r\n});\r\n\r\nexport const eventClearActive = () => ({\r\n  type: types.eventClearActive,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async(dispatch) => {\r\n    try {\r\n      //console.log(event);\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n      const body = await resp.json();\r\n      if( body.ok ){\r\n        dispatch(eventUpdated(event));\r\n      } else {        \r\n        Swal.fire('Error', (body.msg !== undefined) ? body.msg : body.errors.title.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n});\r\n\r\nexport const eventStartDelete = (event) => {\r\n  return async(dispatch, getState) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n    //console.log(id)\r\n    try {\r\n      console.log(event);\r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n      const body = await resp.json();\r\n      if( body.ok ){\r\n        dispatch(eventDeleted());\r\n      } else {        \r\n        Swal.fire('Error', (body.msg !== undefined) ? body.msg : body.errors.title.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport const eventDeleted = () => ({\r\n  type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async(dispatch) => {\r\n    try {      \r\n      const resp = await fetchConToken('events');\r\n      const body = await resp.json();\r\n      const events = convertDateStrToDateObj(body.eventos);\r\n      //console.log(body)\r\n      \r\n      dispatch(eventLoaded(events))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n  type : types.eventLoaded,\r\n  payload: events\r\n});","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\nimport { eventClearLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n  // es asincrono asi que necesita este return\r\n  return async(dispatch) => {\r\n    const resp = await fetchSinToken('auth', {email,password}, 'POST');\r\n    const body = await resp.json();\r\n    //const token = await resp.headers.get();    \r\n    //console.log(body)\r\n    \r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', (body.msg !== undefined) ? body.msg : body.errors.title.msg, 'error');\r\n    }    \r\n  }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async(dispatch) => {\r\n    const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n    const body = await resp.json();\r\n    //const token = await resp.headers.get();    \r\n    //console.log(body)\r\n    \r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', (body.msg !== undefined) ? body.msg : body.errors.title.msg, 'error');\r\n    }  \r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n  return async(dispatch) => {\r\n    const resp = await fetchConToken('auth/renew');\r\n    const body = await resp.json();    \r\n\r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime());\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {      \r\n      dispatch(checkingFinish());\r\n    }  \r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n  type : types.authLogin,\r\n  payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(eventClearLogout());\r\n    dispatch(logout());\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\n\n// initialState es un selector o campo en el formulario que quiero manipular\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return [values, handleInputChange, reset];\n}\n/*\n**** Ejemplo de uso:\nconst initialForm = {\n    name: '',\n    age: 0,\n    email: '',\n};\nconst [ formValues, handleInputChange, reset ] = useForm(initialForm);\n*/","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const AuthScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialLoginForm = {\r\n        lEmail: 'fernando@gmail.com',\r\n        lPassword: '123456',\r\n    };\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm(initialLoginForm);\r\n\r\n    const initialRegisterForm = {\r\n        rName: 'fernando',\r\n        rEmail: 'fernando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    };\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm(initialRegisterForm);\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        //console.log(formLoginValues);\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        //console.log(formRegisterValues);\r\n        if( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout())\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n      <button \r\n        className=\"btn btn-outline-danger\"\r\n        onClick={handleLogout}\r\n      >\r\n        <i className=\"fa fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  const {title, user} = event;\r\n  //console.log(event)\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <br/>\r\n      <span>- {user.name}</span>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal,\r\n});","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActive, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst nowPlusOne = now.clone().add(1,'hour');\r\n\r\nconst initEvent = {\r\n  title: 'Evento',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOne.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const {modalOpen: isModalOpen} = useSelector(state => state.ui)\r\n  const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n  // const [dateStart, setDateStart] = useState(now.toDate());\r\n  // const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes,title,start,end } = formValues;\r\n\r\n  useEffect(() => {\r\n    // se necesita el if porque al refrescar la pagina activeEvent es null y no se puede asignar a un estado\r\n    if(activeEvent){\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      // cuando se borra un evento es necesario restablecer el formulario\r\n      // porque continua almacenando los campos del evento borrado\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent]);\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {    \r\n    //console.log('cerrar modal');\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActive());\r\n    setFormValues(initEvent);\r\n  }\r\n\r\n  const handleStartDateChange = (e) => {\r\n    //setDateStart(e)\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  }\r\n\r\n  const handleEndDateChange = (e) => {\r\n    //setDateEnd(e)\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(formValues);\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    //console.log(momentStart, momentEnd)\r\n    \r\n    if( momentStart.isSameOrAfter(momentEnd)){\r\n      //console.log('Fecha 2 debe ser mayor')      \r\n      return Swal.fire('Error','La fecha fin debe ser mayor a la fecha de incio', 'error');\r\n    }\r\n    if( title.trim().length < 2){\r\n      setTitleValid(false);\r\n    }\r\n    //TODO realizar grabacion en base de datos\r\n    //console.log(formValues);\r\n\r\n    if(activeEvent){\r\n      // actualiza nota\r\n      dispatch( eventStartUpdate( formValues ) );\r\n    } else {\r\n      // crea nueva nota\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    \r\n    setTitleValid(true);\r\n    closeModal();\r\n    \r\n  }\r\n\r\n  return (\r\n    <Modal\r\n        isOpen={isModalOpen}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        closeTimeoutMS={200}\r\n      >\r\n      <h1> {activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n      <hr />\r\n      <form \r\n        name=\"myform\" \r\n        noValidate\r\n        className=\"container\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n\r\n          <div className=\"form-group\">\r\n              <label>Fecha y hora inicio</label>\r\n              <DateTimePicker\r\n                name=\"dateStart\"\r\n                onChange={handleStartDateChange}\r\n                value={start}\r\n                // value={dateStart}\r\n                className=\"form-control\"\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n              <label>Fecha y hora fin</label>\r\n              <DateTimePicker\r\n                name=\"dateEnd\"\r\n                onChange={handleEndDateChange}\r\n                value={end}\r\n                // value={dateEnd}\r\n                minDate={start}\r\n                className=\"form-control\"\r\n              />\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"form-group\">\r\n              <label>Titulo y notas</label>\r\n              <input \r\n                  type=\"text\" \r\n                  className={`form-control ${!titleValid && `is-invalid`}`}\r\n                  placeholder=\"Título del evento\"\r\n                  name=\"title\"\r\n                  autoComplete=\"off\"\r\n                  value={ title }\r\n                  onChange={ handleInputChange }\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n              <textarea \r\n                  type=\"text\" \r\n                  className=\"form-control\"\r\n                  placeholder=\"Notas\"\r\n                  rows=\"5\"\r\n                  name=\"notes\"\r\n                  value={ notes }\r\n                  onChange={ handleInputChange }\r\n              ></textarea>\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n          </div>\r\n\r\n          <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-primary btn-block\"\r\n          >\r\n              <i className=\"far fa-save\"></i>\r\n              <span> Guardar</span>\r\n          </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleButtonClick = () => {\r\n    //console.log(\"boton clickeado\")\r\n    dispatch(uiOpenModal());\r\n  }\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleButtonClick}>\r\n      <i className=\"fa fa-plus\"></i>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  }\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fa fa-trash\"></i>\r\n      <span> Borrar Evento</span>\r\n    </button>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { events, activeEvent } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth);\r\n  \r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading())\r\n    //console.log(events)\r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = (e) => {\r\n    //console.log(\"abrir modal\")\r\n    dispatch(uiOpenModal());\r\n  }\r\n\r\n  const onSelect = (e) => {\r\n    //console.log(e)\r\n    dispatch(eventSetActive(e));\r\n  }\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  }\r\n\r\n  const onSelectSlot = (e) => {\r\n    //console.log(e)\r\n    dispatch(eventClearActive(e))\r\n  }\r\n\r\n  \r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {   \r\n    \r\n\r\n\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white',      \r\n    }\r\n    return {\r\n      style\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar/>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        messages={ messages }\r\n        eventPropGetter={eventStyleGetter}\r\n        components={{event: CalendarEvent}}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelect}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n      />\r\n      <AddNewFab/>\r\n      {(activeEvent) && <DeleteEventFab/>}\r\n      <CalendarModal/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({ \r\n  isAuthenticated,\r\n  component:Component, // se recibe component pero se renombra con C mayuscula para que se vea bien como componente\r\n  ...rest // los demas argumentos como el exact y el path\r\n}) => {\r\n  return (\r\n    <Route\r\n    {...rest} // le paso el resto de los argumentos\r\n    component={(props) => ( // aqui se renombra de rest a props\r\n      (!isAuthenticated) \r\n      ? (<Component {...props} />) \r\n      : (<Redirect to=\"/\" />) // si esta autenticado lo mantiene en el dashboard\r\n    )} // llamo al componente con un callback para obtener sus props\r\n    />\r\n  )\r\n}\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({ \r\n  isAuthenticated,\r\n  component:Component, // se recibe component pero se renombra con C mayuscula para que se vea bien como componente\r\n  ...rest // los demas argumentos como el exact y el path\r\n}) => {\r\n  // obtenemos del rest, la ultima url visitada y la guardamos en localStorage para ingresar ahi la proxima vez que inicie sesion\r\n  // adicionalmente, si la ruta es /search, le concatenamos la busqueda realizada\r\n\r\n  //const loc = rest.location.pathname;\r\n  //localStorage.setItem('lastPath', (loc === '/search') ? loc+rest.location.search : loc);\r\n\r\n  return (\r\n    <Route\r\n    {...rest} // le paso el resto de los argumentos\r\n    component={(props) => ( // aqui se renombra de rest a props\r\n      (isAuthenticated) \r\n      ? (<Component {...props} />) \r\n      : (<Redirect to=\"/auth\" />) // si no esta autenticado lo redirige al login\r\n    )} // llamo al componente con un callback para obtener sus props\r\n    />\r\n  )\r\n}\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AuthScreen } from '../components/auth/AuthScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth'\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  //checking va a revisar la autenticación, en cuanto retorne false, indica que ya terminó de revisar la autenticación\r\n  const { checking, uid } = useSelector(state => state.auth);\r\n  useEffect(() => {\r\n    dispatch(startChecking())    \r\n  }, [dispatch]);\r\n  if( checking ) {\r\n    return (<h5>Espere...</h5>)\r\n  }\r\n  return (\r\n    <Router> \r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n            exact \r\n            path=\"/auth\" \r\n            component={AuthScreen}\r\n            isAuthenticated={!!uid} //doble negacion sirve para retornar un booleano a partir de un string, retornando false en caso de ser null\r\n          />\r\n          <PrivateRoute \r\n            exact \r\n            path=\"/\" \r\n            component={CalendarScreen}\r\n            isAuthenticated={!!uid} //doble negacion sirve para retornar un booleano a partir de un string, retornando false en caso de ser null\r\n          />\r\n          {/* Cualquier otra ruta desconocida, redirige al /auth */}\r\n          <Redirect to=\"/auth\"/>\r\n        </Switch>\r\n      </div>           \r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter/>\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}